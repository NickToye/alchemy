// Utilities :: Colours

@each $alchemy-key, $alchemy-variants in $alchemy-scheme {
  $base-alchemy-value: map-get($alchemy-variants, 'base');
  $contrast-alchemy-value: map-get($alchemy-variants, 'contraster');

  .u-alchemy-#{$alchemy-key}-colour {
    color: $base-alchemy-value;
  }

  .u-alchemy-#{$alchemy-key}-bg {
    background-color: $base-alchemy-value;
    color: $contrast-alchemy-value;

    &.c-swatch {
      &:before,
      &:after {
        @include border-radius($alchemy-global-radius bottom);
        color: alchemy-scheme('medium-grey');
      }
      &:before { content: str-replace($alchemy-key, '-', ' '); }
      &:after {
        content: "#{$base-alchemy-value}";
        color: alchemy-scheme('grey', 'light');
      }
    }


    $variant-gradient: (unquote("to right"),);

    $index: 0;
      @each $variant-name, $variant-value in $alchemy-variants {
        $variant-gradient: append($variant-gradient, $variant-value $index * $variant-height);
        $index: $index + 1;
        $variant-gradient: append($variant-gradient, $variant-value $index * $variant-height);
      }

      .c-swatch__variants {
        position: absolute;
        width: $variant-height * length($alchemy-variants);
        height: $variant-height;
        right: 24px;
        bottom: 20px;
        background: linear-gradient(#{$variant-gradient});
        @include border-radius($alchemy-global-radius/2);
        box-shadow: 0 0 3px rgba(black,.4);
      }
  }
}
